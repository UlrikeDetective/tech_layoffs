{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8907976,"sourceType":"datasetVersion","datasetId":4363856}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"Learning to work with interactive charts.\n\nFirst load the data.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\ndf = pd.read_csv('/kaggle/input/tech-layoffs-2020-2024/tech_layoffs_Q2_2024.csv')\n\n# Display the first few rows of the DataFrame\ndisplay(df.head())\n\n# Display the DataFrame information\ndisplay(df.info(verbose=True))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-11T18:52:08.416716Z","iopub.execute_input":"2024-07-11T18:52:08.417128Z","iopub.status.idle":"2024-07-11T18:52:09.807607Z","shell.execute_reply.started":"2024-07-11T18:52:08.417093Z","shell.execute_reply":"2024-07-11T18:52:09.805369Z"},"trusted":true},"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/plain":"   #        Company    Location_HQ                  Region       State  \\\n0  1  Tamara Mellon    Los Angeles                     NaN  California   \n1  2   HopSkipDrive    Los Angeles                     NaN  California   \n2  3    Panda Squad  San Francisco  San Francisco Bay Area  California   \n3  4       Help.com         Austin                     NaN         NaN   \n4  5      Inspirato         Denver                     NaN         NaN   \n\n  Country      Continent  Laid_Off Date_layoffs Percentage  \\\n0     USA  North America      20.0   2020-03-12       40,0   \n1     USA  North America       8.0   2020-03-13       10,0   \n2     USA  North America       6.0   2020-03-13       75,0   \n3     USA  North America      16.0   2020-03-16      100,0   \n4     USA  North America     130.0   2020-03-16       22,0   \n\n  Company_Size_before_Layoffs Company_Size_after_layoffs        Industry  \\\n0                         50                         30           Retail   \n1                         80                         72   Transportation   \n2                          8                          2         Consumer   \n3                         16                          0          Support   \n4                        591                        461           Travel   \n\n      Stage  Money_Raised_in__mil  Year   latitude   longitude  \n0  Series C                  90.0  2020  34.053691 -118.242766  \n1   Unknown                  45.0  2020  34.053691 -118.242766  \n2      Seed                   1.0  2020  37.779259 -122.419329  \n3      Seed                   6.0  2020  30.271129  -97.743700  \n4  Series C                  79.0  2020  39.739236 -104.984862  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>#</th>\n      <th>Company</th>\n      <th>Location_HQ</th>\n      <th>Region</th>\n      <th>State</th>\n      <th>Country</th>\n      <th>Continent</th>\n      <th>Laid_Off</th>\n      <th>Date_layoffs</th>\n      <th>Percentage</th>\n      <th>Company_Size_before_Layoffs</th>\n      <th>Company_Size_after_layoffs</th>\n      <th>Industry</th>\n      <th>Stage</th>\n      <th>Money_Raised_in__mil</th>\n      <th>Year</th>\n      <th>latitude</th>\n      <th>longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Tamara Mellon</td>\n      <td>Los Angeles</td>\n      <td>NaN</td>\n      <td>California</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>20.0</td>\n      <td>2020-03-12</td>\n      <td>40,0</td>\n      <td>50</td>\n      <td>30</td>\n      <td>Retail</td>\n      <td>Series C</td>\n      <td>90.0</td>\n      <td>2020</td>\n      <td>34.053691</td>\n      <td>-118.242766</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>HopSkipDrive</td>\n      <td>Los Angeles</td>\n      <td>NaN</td>\n      <td>California</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>8.0</td>\n      <td>2020-03-13</td>\n      <td>10,0</td>\n      <td>80</td>\n      <td>72</td>\n      <td>Transportation</td>\n      <td>Unknown</td>\n      <td>45.0</td>\n      <td>2020</td>\n      <td>34.053691</td>\n      <td>-118.242766</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Panda Squad</td>\n      <td>San Francisco</td>\n      <td>San Francisco Bay Area</td>\n      <td>California</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>6.0</td>\n      <td>2020-03-13</td>\n      <td>75,0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>Consumer</td>\n      <td>Seed</td>\n      <td>1.0</td>\n      <td>2020</td>\n      <td>37.779259</td>\n      <td>-122.419329</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Help.com</td>\n      <td>Austin</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>16.0</td>\n      <td>2020-03-16</td>\n      <td>100,0</td>\n      <td>16</td>\n      <td>0</td>\n      <td>Support</td>\n      <td>Seed</td>\n      <td>6.0</td>\n      <td>2020</td>\n      <td>30.271129</td>\n      <td>-97.743700</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Inspirato</td>\n      <td>Denver</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>USA</td>\n      <td>North America</td>\n      <td>130.0</td>\n      <td>2020-03-16</td>\n      <td>22,0</td>\n      <td>591</td>\n      <td>461</td>\n      <td>Travel</td>\n      <td>Series C</td>\n      <td>79.0</td>\n      <td>2020</td>\n      <td>39.739236</td>\n      <td>-104.984862</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1839 entries, 0 to 1838\nData columns (total 18 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   #                            1839 non-null   int64  \n 1   Company                      1839 non-null   object \n 2   Location_HQ                  1839 non-null   object \n 3   Region                       473 non-null    object \n 4   State                        566 non-null    object \n 5   Country                      1839 non-null   object \n 6   Continent                    1839 non-null   object \n 7   Laid_Off                     1677 non-null   float64\n 8   Date_layoffs                 1839 non-null   object \n 9   Percentage                   1667 non-null   object \n 10  Company_Size_before_Layoffs  1585 non-null   object \n 11  Company_Size_after_layoffs   1619 non-null   object \n 12  Industry                     1839 non-null   object \n 13  Stage                        1839 non-null   object \n 14  Money_Raised_in__mil         1692 non-null   float64\n 15  Year                         1839 non-null   int64  \n 16  latitude                     1839 non-null   float64\n 17  longitude                    1839 non-null   float64\ndtypes: float64(4), int64(2), object(12)\nmemory usage: 258.7+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}}]},{"cell_type":"markdown","source":"Second create a pivot table and with the group by of the entries after Continents, total layoffs and reported layoffs per year.","metadata":{}},{"cell_type":"code","source":"# Group by \"Continent\" and \"Year\" and sum the \"Laid_Off\" entries\ndf_Co_Y = df.groupby(['Continent', 'Year'])['Laid_Off'].sum().reset_index()\n\n# Pivot the DataFrame to get years as columns\ndf_Co_Y_pivot = df_Co_Y.pivot(index='Continent', columns='Year', values='Laid_Off').fillna(0)\n\n# Add a 'Total_Laid_off' column\ndf_Co_Y_pivot['Total_Laid_off'] = df_Co_Y_pivot.sum(axis=1)\n\n# Ensure all relevant years are present in the columns\nfor year in range(2020, 2025):\n    if year not in df_Co_Y_pivot.columns:\n        df_Co_Y_pivot[year] = 0\n\n# Reorder columns to have years first and then 'Total_Laid_off'\ncolumns_order = list(range(2020, 2025)) + ['Total_Laid_off']\ndf_Co_Y_final = df_Co_Y_pivot[columns_order].reset_index()\n\nprint(df_Co_Y_final)\n\ndf_Co_Y_final.to_csv('layoffs_Continent_sum_year.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-07-11T18:53:43.225924Z","iopub.execute_input":"2024-07-11T18:53:43.226347Z","iopub.status.idle":"2024-07-11T18:53:43.265208Z","shell.execute_reply.started":"2024-07-11T18:53:43.226315Z","shell.execute_reply":"2024-07-11T18:53:43.262251Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Year      Continent     2020    2021     2022      2023     2024  \\\n0            Africa      0.0     0.0   1619.0     633.0   1060.0   \n1              Asia  12678.0   221.0  16396.0    9604.0  20153.0   \n2         Australia     96.0     0.0    875.0    2658.0     60.0   \n3            Europe   2239.0   387.0   8836.0   31109.0  16770.0   \n4     North America  45289.0  6182.0  95534.0  131004.0  82868.0   \n5     South America   1227.0     0.0   4317.0    1938.0    519.0   \n\nYear  Total_Laid_off  \n0             3312.0  \n1            59052.0  \n2             3689.0  \n3            59341.0  \n4           360877.0  \n5             8001.0  \n","output_type":"stream"}]},{"cell_type":"markdown","source":"Install dash if needed","metadata":{}},{"cell_type":"code","source":"# pip install dash","metadata":{"execution":{"iopub.status.busy":"2024-07-11T18:57:28.857057Z","iopub.execute_input":"2024-07-11T18:57:28.857473Z","iopub.status.idle":"2024-07-11T18:57:46.604362Z","shell.execute_reply.started":"2024-07-11T18:57:28.857426Z","shell.execute_reply":"2024-07-11T18:57:46.602861Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Collecting dash\n  Downloading dash-2.17.1-py3-none-any.whl.metadata (10 kB)\nRequirement already satisfied: Flask<3.1,>=1.0.4 in /opt/conda/lib/python3.10/site-packages (from dash) (3.0.3)\nRequirement already satisfied: Werkzeug<3.1 in /opt/conda/lib/python3.10/site-packages (from dash) (3.0.3)\nRequirement already satisfied: plotly>=5.0.0 in /opt/conda/lib/python3.10/site-packages (from dash) (5.18.0)\nCollecting dash-html-components==2.0.0 (from dash)\n  Downloading dash_html_components-2.0.0-py3-none-any.whl.metadata (3.8 kB)\nCollecting dash-core-components==2.0.0 (from dash)\n  Downloading dash_core_components-2.0.0-py3-none-any.whl.metadata (2.9 kB)\nCollecting dash-table==5.0.0 (from dash)\n  Downloading dash_table-5.0.0-py3-none-any.whl.metadata (2.4 kB)\nRequirement already satisfied: importlib-metadata in /opt/conda/lib/python3.10/site-packages (from dash) (6.11.0)\nRequirement already satisfied: typing-extensions>=4.1.1 in /opt/conda/lib/python3.10/site-packages (from dash) (4.9.0)\nRequirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from dash) (2.32.3)\nRequirement already satisfied: retrying in /opt/conda/lib/python3.10/site-packages (from dash) (1.3.3)\nRequirement already satisfied: nest-asyncio in /opt/conda/lib/python3.10/site-packages (from dash) (1.5.8)\nRequirement already satisfied: setuptools in /opt/conda/lib/python3.10/site-packages (from dash) (69.0.3)\nRequirement already satisfied: Jinja2>=3.1.2 in /opt/conda/lib/python3.10/site-packages (from Flask<3.1,>=1.0.4->dash) (3.1.2)\nRequirement already satisfied: itsdangerous>=2.1.2 in /opt/conda/lib/python3.10/site-packages (from Flask<3.1,>=1.0.4->dash) (2.2.0)\nRequirement already satisfied: click>=8.1.3 in /opt/conda/lib/python3.10/site-packages (from Flask<3.1,>=1.0.4->dash) (8.1.7)\nRequirement already satisfied: blinker>=1.6.2 in /opt/conda/lib/python3.10/site-packages (from Flask<3.1,>=1.0.4->dash) (1.8.2)\nRequirement already satisfied: tenacity>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from plotly>=5.0.0->dash) (8.2.3)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from plotly>=5.0.0->dash) (21.3)\nRequirement already satisfied: MarkupSafe>=2.1.1 in /opt/conda/lib/python3.10/site-packages (from Werkzeug<3.1->dash) (2.1.3)\nRequirement already satisfied: zipp>=0.5 in /opt/conda/lib/python3.10/site-packages (from importlib-metadata->dash) (3.17.0)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->dash) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->dash) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->dash) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->dash) (2024.7.4)\nRequirement already satisfied: six>=1.7.0 in /opt/conda/lib/python3.10/site-packages (from retrying->dash) (1.16.0)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->plotly>=5.0.0->dash) (3.1.1)\nDownloading dash-2.17.1-py3-none-any.whl (7.5 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.5/7.5 MB\u001b[0m \u001b[31m59.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\nDownloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\nDownloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\nInstalling collected packages: dash-table, dash-html-components, dash-core-components, dash\nSuccessfully installed dash-2.17.1 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"Importing libraries","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport dash\nfrom dash import dcc, html\nfrom dash.dependencies import Input, Output\nimport plotly.express as px","metadata":{"execution":{"iopub.status.busy":"2024-07-11T18:57:56.590877Z","iopub.execute_input":"2024-07-11T18:57:56.591332Z","iopub.status.idle":"2024-07-11T18:57:57.836802Z","shell.execute_reply.started":"2024-07-11T18:57:56.591294Z","shell.execute_reply":"2024-07-11T18:57:57.835640Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"Creating an interactive chart on the first layer you see the continents and the total tech layoffs. If you click on one bar you see the numbers per year for that continent.","metadata":{}},{"cell_type":"code","source":"# Initialize the Dash app\napp = dash.Dash(__name__)\n\n# App layout\napp.layout = html.Div([\n    html.H1(\"Interactive Layoff Chart\"),\n    dcc.Graph(id='continent-bar-chart'),\n    dcc.Graph(id='yearly-bar-chart')\n])\n\n# First layer: Total layoffs by continent\n@app.callback(\n    Output('continent-bar-chart', 'figure'),\n    Input('continent-bar-chart', 'clickData')\n)\ndef update_continent_chart(clickData):\n    fig = px.bar(df_Co_Y_final, x='Continent', y='Total_Laid_off', title='Total Layoffs by Continent')\n    return fig\n\n# Second layer: Layoffs by year for the clicked continent\n@app.callback(\n    Output('yearly-bar-chart', 'figure'),\n    Input('continent-bar-chart', 'clickData')\n)\ndef update_yearly_chart(clickData):\n    if clickData is None:\n        return {}\n    continent = clickData['points'][0]['x']\n    filtered_data = df_Co_Y_final[df_Co_Y_final['Continent'] == continent]\n    yearly_data = filtered_data.melt(id_vars=['Continent', 'Total_Laid_off'], \n                                     value_vars=['2020', '2021', '2022', '2023', '2024'], \n                                     var_name='Year', value_name='Laid_off')\n    fig = px.bar(yearly_data, x='Year', y='Laid_off', title=f'Layoffs in {continent} by Year')\n    return fig\n\n# Run the app\nif __name__ == '__main__':\n    app.run_server(debug=True)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-11T18:58:02.646254Z","iopub.execute_input":"2024-07-11T18:58:02.647247Z","iopub.status.idle":"2024-07-11T18:58:02.704867Z","shell.execute_reply.started":"2024-07-11T18:58:02.647204Z","shell.execute_reply":"2024-07-11T18:58:02.703013Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.lib.display.IFrame at 0x7bc45bec5450>","text/html":"\n        <iframe\n            width=\"100%\"\n            height=\"650\"\n            src=\"http://127.0.0.1:8050/\"\n            frameborder=\"0\"\n            allowfullscreen\n            \n        ></iframe>\n        "},"metadata":{}}]}]}